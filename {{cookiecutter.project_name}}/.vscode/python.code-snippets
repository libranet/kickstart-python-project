{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// https://code.visualstudio.com/docs/editor/userdefinedsnippets
	// https://stackoverflow.com/questions/44312494/how-to-create-per-workspace-snippets-in-vscode
	"Set breakpoint": {
		"scope": "python",
		"prefix": [
			"br",
			"breakp"
		],
		"body": [
			"breakpoint()"
		],
		"description": "Set a pdb-breakpoint."
	},
	"Import pathlib": {
		"scope": "python",
		"prefix": [
			"import pl",
			"import pa",
		],
		"body": [
			"import pathlib as pl"
		],
		"description": "Import pathlib."
	},
	"Import datetime": {
		"scope": "python",
		"prefix": [
			"import datetime",
			"import dt",
		],
		"body": [
			"import datetime as dt"
		],
		"description": "Import datetime."
	},
	"Import functools": {
		"scope": "python",
		"prefix": [
			"import fu",
			"import ft",
		],
		"body": [
			"import functools as ft"
		],
		"description": "Import functools."
	},
	"Import itertools": {
		"scope": "python",
		"prefix": [
			"import iter",
			"import it",
		],
		"body": [
			"import itertools as it"
		],
		"description": "Import itertools."
	},
	"Import typing": {
		"scope": "python",
		"prefix": [
			"import ty",
			"import tp",
		],
		"body": [
			"import typing as tp"
		],
		"description": "Import typing."
	},
	"Get logger": {
		"scope": "python",
		"prefix": [
			"log =",
		],
		"body": [
			"log = logging.getLogger(__name__)"
		],
		"description": "Get logger."
	}
}